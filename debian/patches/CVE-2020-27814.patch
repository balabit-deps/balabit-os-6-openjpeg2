From 15cf3d95814dc931ca0ecb132f81cb152e051bae Mon Sep 17 00:00:00 2001
From: Even Rouault <even.rouault@spatialys.com>
Date: Mon, 23 Nov 2020 18:14:02 +0100
Subject: [PATCH] Encoder: grow again buffer size in
 opj_tcd_code_block_enc_allocate_data() (fixes #1283)

---
 src/lib/openjp2/tcd.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

Index: openjpeg2-2.1.2/src/lib/openjp2/tcd.c
===================================================================
--- openjpeg2-2.1.2.orig/src/lib/openjp2/tcd.c
+++ openjpeg2-2.1.2/src/lib/openjp2/tcd.c
@@ -1107,9 +1107,12 @@ static OPJ_BOOL opj_tcd_code_block_enc_a
 	
     /* +1 is needed for https://github.com/uclouvain/openjpeg/issues/835 */
     /* and actually +2 required for https://github.com/uclouvain/openjpeg/issues/982 */
+    /* and +7 for https://github.com/uclouvain/openjpeg/issues/1283 (-M 3) */
+    /* and +26 for https://github.com/uclouvain/openjpeg/issues/1283 (-M 7) */
+    /* and +28 for https://github.com/uclouvain/openjpeg/issues/1283 (-M 44) */
     /* TODO: is there a theoretical upper-bound for the compressed code */
     /* block size ? */
-    l_data_size = 2 + (OPJ_UINT32)((p_code_block->x1 - p_code_block->x0) *
+    l_data_size = 28 + (OPJ_UINT32)((p_code_block->x1 - p_code_block->x0) *
                                    (p_code_block->y1 - p_code_block->y0) * (OPJ_INT32)sizeof(OPJ_UINT32));
 	
 	if (l_data_size > p_code_block->data_size) {
