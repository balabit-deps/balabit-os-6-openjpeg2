Subject: fix division by zero and undefined behavior on shift in pi.c
Author: Even Rouault <even.rouault@spatialys.com>
Origin: upstream, https://github.com/uclouvain/openjpeg/commit/d27ccf01c68a31ad
--- a/src/lib/openjp2/pi.c	2019-10-08 15:46:03.364003550 +0200
+++ b/src/lib/openjp2/pi.c	2019-10-09 08:59:02.183880328 +0200
@@ -360,6 +360,17 @@
 					try1 = opj_int_ceildiv(pi->ty1, (OPJ_INT32)(comp->dy << levelno));
 					rpx = res->pdx + levelno;
 					rpy = res->pdy + levelno;
+
+					/* To avoid divisions by zero / undefined behaviour on shift */
+					/* in below tests */
+					/* Fixes reading id:000026,sig:08,src:002419,op:int32,pos:60,val:+32 */
+					/* of https://github.com/uclouvain/openjpeg/issues/938 */
+					if (rpx >= 31 || ((comp->dx << rpx) >> rpx) != comp->dx ||
+					        rpy >= 31 || ((comp->dy << rpy) >> rpy) != comp->dy) {
+					    continue;
+					}
+
+					/* See ISO-15441. B.12.1.3 Resolution level-position-component-layer progression */
 					if (!((pi->y % (OPJ_INT32)(comp->dy << rpy) == 0) || ((pi->y == pi->ty0) && ((try0 << levelno) % (1 << rpy))))){
 						continue;	
 					}
@@ -441,6 +452,17 @@
 					try1 = opj_int_ceildiv(pi->ty1, (OPJ_INT32)(comp->dy << levelno));
 					rpx = res->pdx + levelno;
 					rpy = res->pdy + levelno;
+
+					/* To avoid divisions by zero / undefined behaviour on shift */
+					/* in below tests */
+					/* Relates to id:000019,sig:08,src:001098,op:flip1,pos:49 */
+					/* of https://github.com/uclouvain/openjpeg/issues/938 */
+					if (rpx >= 31 || ((comp->dx << rpx) >> rpx) != comp->dx ||
+					        rpy >= 31 || ((comp->dy << rpy) >> rpy) != comp->dy) {
+					    continue;
+					}
+
+					/* See ISO-15441. B.12.1.4 Position-component-resolution level-layer progression */
 					if (!((pi->y % (OPJ_INT32)(comp->dy << rpy) == 0) || ((pi->y == pi->ty0) && ((try0 << levelno) % (1 << rpy))))){
 						continue;	
 					}
@@ -520,6 +542,17 @@
 					try1 = opj_int_ceildiv(pi->ty1, (OPJ_INT32)(comp->dy << levelno));
 					rpx = res->pdx + levelno;
 					rpy = res->pdy + levelno;
+
+					/* To avoid divisions by zero / undefined behaviour on shift */
+					/* in below tests */
+					/* Fixes reading id:000019,sig:08,src:001098,op:flip1,pos:49 */
+					/* of https://github.com/uclouvain/openjpeg/issues/938 */
+					if (rpx >= 31 || ((comp->dx << rpx) >> rpx) != comp->dx ||
+					        rpy >= 31 || ((comp->dy << rpy) >> rpy) != comp->dy) {
+					    continue;
+					}
+
+					/* See ISO-15441. B.12.1.5 Component-position-resolution level-layer progression */
 					if (!((pi->y % (OPJ_INT32)(comp->dy << rpy) == 0) || ((pi->y == pi->ty0) && ((try0 << levelno) % (1 << rpy))))){
 						continue;	
 					}
